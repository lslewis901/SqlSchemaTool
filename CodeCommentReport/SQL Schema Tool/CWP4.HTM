<!-- saved from url=(0007)http:// -->
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>Infor.SST.AsyncMethods.AsyncThread</TITLE>
<LINK REL=STYLESHEET HREF="../CommentReport.css" TYPE="text/css">
</HEAD>
<BODY topmargin=0 rightmargin=0 leftmargin=0 style="background-image: url(../titletile.jpg); background-repeat:repeat-x; background-position: 0 0;" >
<DIV CLASS="PageHeading">Infor.SST.AsyncMethods.AsyncThread Class</DIV>
<DIV CLASS="Description">

AsyncThread Class, handles async calls from the UI.
<P>

</DIV>
<IMG src="../GradLeft.jpg" width=7 height=378 alt="" border="0" style="position:absolute; left:10; top:18;z-Index:2">
<IMG src="../GradTop.jpg" width=352 height=7 alt="" border="0" align="top" style="position:absolute; left:10; top:18; z-index:1">
<DIV CLASS="Remarks">
<SPAN CLASS="RemarkHdrX">Access: </SPAN>Public</DIV>
<DIV CLASS="Remarks">
<SPAN CLASS="RemarkHdrX">Base Classes: </SPAN>AsyncOperation</DIV>
<TABLE CLASS="InfoTable" cellpadding=0 cellspacing=0>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD valign=top align=left width=9 bgcolor="#cccc66"><IMG SRC="../graycorner.jpg" align=top></TD>
<TD CLASS="TableLightLabel" WIDTH=206>Members</TD>
<TD CLASS="TableLightLabel" >Description</TD>
<TD width=20>&nbsp;</TD>
</TR>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc"><A HREF="CWP5.HTM" TARGET="CNTFRAME">__stuff</A></TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD width=20>&nbsp;</TD>
</TR><TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc"><A HREF="CWP6.HTM" TARGET="CNTFRAME">AsyncThread</A></TD>
<TD CLASS="TableLightDesc">
Instantiates the AsyncThread class.
<P>
</TD>
<TD width=20>&nbsp;</TD>
</TR><TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc"><A HREF="CWP7.HTM" TARGET="CNTFRAME">DoWork</A></TD>
<TD CLASS="TableLightDesc">
Overridden method where the developer would add code to perform the actual async call work.
&lt;para&gt;
&lt;example&gt; This sample shows where to modify the DoWork method.
&lt;code escaped="true"&gt;
protected override void DoWork()
{
	// TODO: add a method to perform some work and then 
	//		 fire the OnWorkCompleted event
	//		 When a cancel occurs, we'd better acknowledge 
	//		 cancellation.
	if (CancelRequested)
	{
		AcknowledgeCancel();
	}
}
&lt;/code&gt;
&lt;/example&gt;
&lt;/para&gt;
<P>
</TD>
<TD width=20>&nbsp;</TD>
</TR><TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc"><A HREF="CWP8.HTM" TARGET="CNTFRAME">OnWorkCompleted</A></TD>
<TD CLASS="TableLightDesc">
Event handler to fire event OnWorkCompleted.  
This provides notification back to the UI elements
that launched the async call.
<P>
</TD>
<TD width=20>&nbsp;</TD>
</TR></TABLE>
</BODY>
</HTML>
