<!-- saved from url=(0007)http:// -->
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>Infor.SST.ResourceReader.ReadXSLFromResource</TITLE>
<LINK REL=STYLESHEET HREF="../CommentReport.css" TYPE="text/css">
</HEAD>
<BODY topmargin=0 rightmargin=0 leftmargin=0 style="background-image: url(../titletile.jpg); background-repeat:repeat-x; background-position: 0 0;" >
<DIV CLASS="PageHeading">Infor.SST.ResourceReader.ReadXSLFromResource Function</DIV>
<DIV CLASS="Description">

Reads embedded XSLT files and returns their contents as a string.  Keep in mind that .Net Framework v1.1 only supports XSLT v1.0.
You can of course use EXSLT to extend the XSL functions provided by the .Net Framework.
&lt;para&gt;
&lt;example&gt;This is a sample of an XSL file used for the transformation process.
&lt;code escaped="true"&gt;

&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;

   &lt;!-- Purpose: XSLT to convert SQL schema XML into DROP/CREATE of DB objects.
	Known limitations: no support for indexed views or the index fillfactor. 
	Author: Lindsey Lewis, 08-26-2005 --&gt;
	&lt;xsl:output method="xml" omit-xml-declaration="yes"/&gt;

	&lt;xsl:template match="/"&gt;
		 &lt;xsl:apply-templates/&gt;
	&lt;/xsl:template&gt;

	&lt;!-- template to output ALL SQL statement types --&gt;
	&lt;xsl:template match="DataBase_Schema"&gt;
		&lt;xsl:apply-templates select="Database"/&gt;
	&lt;/xsl:template&gt;
		
	&lt;!-- template to output comment header --&gt;
	&lt;xsl:template match="Database"&gt;
	-- DB Name: &lt;xsl:value-of select="Name"/&gt;
	-- Output Date: &lt;xsl:value-of select="Date"/&gt;
	-- Output Time: &lt;xsl:value-of select="Time"/&gt;
	-- AutoGenerated SQL: using the SQL Schema Tool.
	&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;

&lt;/code&gt;
&lt;/example&gt;
&lt;/para&gt;
<P>

</DIV>
<IMG src="../GradLeft.jpg" width=7 height=378 alt="" border="0" style="position:absolute; left:10; top:18;z-Index:2">
<IMG src="../GradTop.jpg" width=352 height=7 alt="" border="0" align="top" style="position:absolute; left:10; top:18; z-index:1">
<DIV CLASS="Remarks">
<SPAN CLASS="RemarkHdrX">Public string ReadXSLFromResource (string)</SPAN></DIV>
<TABLE CLASS="InfoTable" cellpadding=0 cellspacing=0>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD valign=top align=left width=9 bgcolor="#cccc66"><IMG SRC="../graycorner.jpg" align=top></TD>
<TD CLASS="TableLightLabel" >Type</TD>
<TD CLASS="TableLightLabel" >Name</TD>
<TD CLASS="TableLightLabel" >Description</TD>
<TD width=20>&nbsp;</TD>
</TR>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc">string</TD>
<TD CLASS="TableLightDesc">resourceName</TD>
<TD CLASS="TableLightDesc">string value representing the embedded resouce locator path.</TD>
<TD width=20>&nbsp;</TD>
</TR></TABLE>
<TABLE CLASS="InfoTable" cellpadding=0 cellspacing=0>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD valign=top align=left width=9 bgcolor="#cccc66"><IMG SRC="../graycorner.jpg" align=top></TD>
<TD CLASS="TableLightLabel" WIDTH=206>Return</TD>
<TD CLASS="TableLightLabel" >Description</TD>
<TD width=20>&nbsp;</TD>
</TR>
<TR height=20>
<TD width=20>&nbsp;</TD>
<TD CLASS="TableLightDesc">&nbsp;</TD>
<TD CLASS="TableLightDesc">string</TD>
<TD CLASS="TableLightDesc">returns an XSL document as a string.<P>
</TD>
<TD width=20>&nbsp;</TD>
</TR></TABLE>
</BODY>
</HTML>
